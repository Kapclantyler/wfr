-- Mobile-Compatible RadiantHub UI
-- Full script with touch support and no mobile-specific checks needed

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = game:GetService("CoreGui")

-- Global settings storage
local settings = {
    ["Enable Aimbot"] = false,
    ["Aim Smoothness"] = 50,
    ["Target Bone"] = 1,
    ["Target Parts"] = {},
    ["FOV Size"] = 90,
    ["Silent Aim"] = false,
    ["Aimbot Key"] = "None",
}

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AimbotUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 700, 0, 450)
mainFrame.Position = UDim2.new(0.5, -350, 0.5, -225)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

-- Main gradient
local mainGradient = Instance.new("UIGradient")
mainGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(60, 60, 80)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 25, 40))
}
mainGradient.Rotation = 135
mainGradient.Parent = mainFrame

-- Rainbow border
local borderFrame = Instance.new("Frame")
borderFrame.Name = "BorderFrame"
borderFrame.Size = UDim2.new(1, 8, 1, 8)
borderFrame.Position = UDim2.new(0, -4, 0, -4)
borderFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
borderFrame.BorderSizePixel = 0
borderFrame.ZIndex = 0
borderFrame.Parent = mainFrame

local borderGradient = Instance.new("UIGradient")
borderGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 150)),
    ColorSequenceKeypoint.new(0.2, Color3.fromRGB(0, 255, 255)),
    ColorSequenceKeypoint.new(0.4, Color3.fromRGB(0, 255, 0)),
    ColorSequenceKeypoint.new(0.6, Color3.fromRGB(255, 255, 0)),
    ColorSequenceKeypoint.new(0.8, Color3.fromRGB(255, 100, 0)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 150))
}
borderGradient.Rotation = 45
borderGradient.Parent = borderFrame

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 40)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
titleBar.BorderSizePixel = 1
titleBar.BorderColor3 = Color3.fromRGB(70, 70, 70)
titleBar.Parent = mainFrame

-- Title
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(1, -100, 1, 0)
titleLabel.Position = UDim2.new(0, 20, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "RADIANTHUB"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextSize = 18
titleLabel.TextStrokeTransparency = 0
titleLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = titleBar

-- Minimize button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Name = "MinimizeButton"
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -70, 0, 5)
minimizeButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
minimizeButton.BorderSizePixel = 0
minimizeButton.Text = "−"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.TextSize = 18
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.Parent = titleBar

-- Close button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
closeButton.BorderSizePixel = 0
closeButton.Text = "×"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextSize = 18
closeButton.Font = Enum.Font.GothamBold
closeButton.Parent = titleBar

-- Left Sidebar
local leftSidebar = Instance.new("Frame")
leftSidebar.Name = "LeftSidebar"
leftSidebar.Size = UDim2.new(0, 150, 1, -50)
leftSidebar.Position = UDim2.new(0, 5, 0, 45)
leftSidebar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
leftSidebar.BorderSizePixel = 0
leftSidebar.Parent = mainFrame

local sidebarCorner = Instance.new("UICorner")
sidebarCorner.CornerRadius = UDim.new(0, 6)
sidebarCorner.Parent = leftSidebar

-- Content Area
local contentArea = Instance.new("Frame")
contentArea.Name = "ContentArea"
contentArea.Size = UDim2.new(1, -170, 1, -50)
contentArea.Position = UDim2.new(0, 165, 0, 45)
contentArea.BackgroundTransparency = 1
contentArea.BorderSizePixel = 0
contentArea.Parent = mainFrame

-- Left Section
local leftSection = Instance.new("Frame")
leftSection.Name = "LeftSection"
leftSection.Size = UDim2.new(0.495, -5, 1, 0)
leftSection.Position = UDim2.new(0, 0, 0, 0)
leftSection.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
leftSection.BorderSizePixel = 1
leftSection.BorderColor3 = Color3.fromRGB(70, 70, 70)
leftSection.Parent = contentArea

-- Right Section
local rightSection = Instance.new("Frame")
rightSection.Name = "RightSection"
rightSection.Size = UDim2.new(0.495, -5, 1, 0)
rightSection.Position = UDim2.new(0.505, 0, 0, 0)
rightSection.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
rightSection.BorderSizePixel = 1
rightSection.BorderColor3 = Color3.fromRGB(70, 70, 70)
rightSection.Parent = contentArea

-- Headers
local leftHeader = Instance.new("TextLabel")
leftHeader.Name = "LeftHeader"
leftHeader.Size = UDim2.new(1, 0, 0, 30)
leftHeader.Position = UDim2.new(0, 0, 0, 5)
leftHeader.BackgroundTransparency = 1
leftHeader.Text = "COMBAT FEATURES"
leftHeader.TextColor3 = Color3.fromRGB(255, 255, 255)
leftHeader.TextSize = 14
leftHeader.Font = Enum.Font.GothamBold
leftHeader.TextXAlignment = Enum.TextXAlignment.Center
leftHeader.Parent = leftSection

local rightHeader = Instance.new("TextLabel")
rightHeader.Name = "RightHeader"
rightHeader.Size = UDim2.new(1, 0, 0, 30)
rightHeader.Position = UDim2.new(0, 0, 0, 5)
rightHeader.BackgroundTransparency = 1
rightHeader.Text = "COMBAT SETTINGS"
rightHeader.TextColor3 = Color3.fromRGB(255, 255, 255)
rightHeader.TextSize = 14
rightHeader.Font = Enum.Font.GothamBold
rightHeader.TextXAlignment = Enum.TextXAlignment.Center
rightHeader.Parent = rightSection

-- Content containers
local leftContent = Instance.new("Frame")
leftContent.Name = "LeftContent"
leftContent.Size = UDim2.new(1, -10, 1, -45)
leftContent.Position = UDim2.new(0, 5, 0, 40)
leftContent.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
leftContent.BorderSizePixel = 1
leftContent.BorderColor3 = Color3.fromRGB(80, 80, 80)
leftContent.Parent = leftSection

local rightContent = Instance.new("Frame")
rightContent.Name = "RightContent"
rightContent.Size = UDim2.new(1, -10, 1, -45)
rightContent.Position = UDim2.new(0, 5, 0, 40)
rightContent.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
rightContent.BorderSizePixel = 1
rightContent.BorderColor3 = Color3.fromRGB(80, 80, 80)
rightContent.Parent = rightSection

-- Tab System
local currentTab = "Combat"
local tabs = {
    {name = "Combat", icon = "⌂", displayName = "Main", leftTitle = "COMBAT FEATURES", rightTitle = "COMBAT SETTINGS"},
    {name = "Visual", icon = "◉", displayName = "Visuals", leftTitle = "ESP FEATURES", rightTitle = "VISUAL SETTINGS"},
    {name = "Misc", icon = "⊞", displayName = "Misc", leftTitle = "MOVEMENT HACKS", rightTitle = "GAME EXPLOITS"},
    {name = "Settings", icon = "⚙", displayName = "Settings", leftTitle = "CONFIG MANAGER", rightTitle = "ADVANCED OPTIONS"}
}

-- Watermark
local watermarkGui = Instance.new("ScreenGui")
watermarkGui.Name = "RadiantHubWatermark"
watermarkGui.ResetOnSpawn = false
watermarkGui.Parent = playerGui

local watermarkFrame = Instance.new("Frame")
watermarkFrame.Name = "WatermarkFrame"
watermarkFrame.Size = UDim2.new(0, 250, 0, 25)
watermarkFrame.Position = UDim2.new(1, -260, 0, 10)
watermarkFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
watermarkFrame.BorderSizePixel = 0
watermarkFrame.Parent = watermarkGui

local watermarkCorner = Instance.new("UICorner")
watermarkCorner.CornerRadius = UDim.new(0, 3)
watermarkCorner.Parent = watermarkFrame

-- Accent line
local accentLine = Instance.new("Frame")
accentLine.Name = "AccentLine"
accentLine.Size = UDim2.new(0, 3, 1, 0)
accentLine.Position = UDim2.new(0, 0, 0, 0)
accentLine.BackgroundColor3 = Color3.fromRGB(220, 50, 47)
accentLine.BorderSizePixel = 0
accentLine.Parent = watermarkFrame

local accentCorner = Instance.new("UICorner")
accentCorner.CornerRadius = UDim.new(0, 3)
accentCorner.Parent = accentLine

-- Content frame
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -8, 1, 0)
contentFrame.Position = UDim2.new(0, 8, 0, 0)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = watermarkFrame

-- RadiantHub label
local radiantLabel = Instance.new("TextLabel")
radiantLabel.Size = UDim2.new(0, 80, 1, 0)
radiantLabel.Position = UDim2.new(0, 0, 0, 0)
radiantLabel.BackgroundTransparency = 1
radiantLabel.Text = "RadiantHub"
radiantLabel.TextColor3 = Color3.fromRGB(255, 0, 128)
radiantLabel.TextSize = 12
radiantLabel.Font = Enum.Font.GothamBold
radiantLabel.TextXAlignment = Enum.TextXAlignment.Left
radiantLabel.TextYAlignment = Enum.TextYAlignment.Center
radiantLabel.Parent = contentFrame

-- Separator
local separator1 = Instance.new("TextLabel")
separator1.Size = UDim2.new(0, 10, 1, 0)
separator1.Position = UDim2.new(0, 80, 0, 0)
separator1.BackgroundTransparency = 1
separator1.Text = "|"
separator1.TextColor3 = Color3.fromRGB(100, 100, 100)
separator1.TextSize = 11
separator1.Font = Enum.Font.Gotham
separator1.TextXAlignment = Enum.TextXAlignment.Center
separator1.TextYAlignment = Enum.TextYAlignment.Center
separator1.Parent = contentFrame

-- FPS Counter
local fpsLabel = Instance.new("TextLabel")
fpsLabel.Size = UDim2.new(0, 50, 1, 0)
fpsLabel.Position = UDim2.new(0, 90, 0, 0)
fpsLabel.BackgroundTransparency = 1
fpsLabel.Text = "60 FPS"
fpsLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
fpsLabel.TextSize = 11
fpsLabel.Font = Enum.Font.Gotham
fpsLabel.TextXAlignment = Enum.TextXAlignment.Left
fpsLabel.TextYAlignment = Enum.TextYAlignment.Center
fpsLabel.Parent = contentFrame

-- User info
local userLabel = Instance.new("TextLabel")
userLabel.Size = UDim2.new(1, -150, 1, 0)
userLabel.Position = UDim2.new(0, 150, 0, 0)
userLabel.BackgroundTransparency = 1
userLabel.Text = player.Name
userLabel.TextColor3 = Color3.fromRGB(160, 160, 160)
userLabel.TextSize = 11
userLabel.Font = Enum.Font.Gotham
userLabel.TextXAlignment = Enum.TextXAlignment.Left
userLabel.TextYAlignment = Enum.TextYAlignment.Center
userLabel.TextTruncate = Enum.TextTruncate.AtEnd
userLabel.Parent = contentFrame

-- Minimized icon
local minimizedIcon = Instance.new("ImageButton")
minimizedIcon.Name = "MinimizedIcon"
minimizedIcon.Size = UDim2.new(0, 50, 0, 50)
minimizedIcon.Position = UDim2.new(0, 50, 0, 50)
minimizedIcon.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
minimizedIcon.BorderSizePixel = 2
minimizedIcon.BorderColor3 = Color3.fromRGB(0, 150, 255)
minimizedIcon.Image = ""
minimizedIcon.ImageColor3 = Color3.fromRGB(255, 255, 255)
minimizedIcon.Visible = false
minimizedIcon.Parent = screenGui

-- User Profile
local userProfileFrame = Instance.new("Frame")
userProfileFrame.Name = "UserProfileFrame"
userProfileFrame.Size = UDim2.new(1, -16, 0, 50)
userProfileFrame.Position = UDim2.new(0, 8, 1, -58)
userProfileFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
userProfileFrame.BorderSizePixel = 0
userProfileFrame.Parent = leftSidebar

local profileCorner = Instance.new("UICorner")
profileCorner.CornerRadius = UDim.new(0, 6)
profileCorner.Parent = userProfileFrame

local userAvatar = Instance.new("ImageLabel")
userAvatar.Name = "UserAvatar"
userAvatar.Size = UDim2.new(0, 35, 0, 35)
userAvatar.Position = UDim2.new(0, 8, 0.5, -17.5)
userAvatar.BackgroundColor3 = Color3.fromRGB(255, 150, 100)
userAvatar.BorderSizePixel = 0
userAvatar.Image = "rbxthumb://type=AvatarHeadShot&id=" .. player.UserId .. "&w=150&h=150"
userAvatar.Parent = userProfileFrame

local avatarCorner = Instance.new("UICorner")
avatarCorner.CornerRadius = UDim.new(0.5, 0)
avatarCorner.Parent = userAvatar

local usernameLabel = Instance.new("TextLabel")
usernameLabel.Size = UDim2.new(1, -50, 0, 16)
usernameLabel.Position = UDim2.new(0, 45, 0, 8)
usernameLabel.BackgroundTransparency = 1
usernameLabel.Text = player.Name
usernameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
usernameLabel.TextSize = 12
usernameLabel.Font = Enum.Font.GothamSemibold
usernameLabel.TextXAlignment = Enum.TextXAlignment.Left
usernameLabel.TextYAlignment = Enum.TextYAlignment.Center
usernameLabel.TextTruncate = Enum.TextTruncate.AtEnd
usernameLabel.Parent = userProfileFrame

-- Mobile-Compatible Functions

-- Notification System
local notificationContainer = Instance.new("Frame")
notificationContainer.Name = "NotificationContainer"
notificationContainer.Size = UDim2.new(0, 300, 0, 200)
notificationContainer.Position = UDim2.new(1, -310, 1, -210)
notificationContainer.BackgroundTransparency = 1
notificationContainer.Parent = watermarkGui

local notificationQueue = {}

local function createNotification(title, message, duration)
    local notification = Instance.new("Frame")
    notification.Size = UDim2.new(1, 0, 0, 60)
    notification.Position = UDim2.new(1, 0, 1, -60 * (#notificationQueue + 1))
    notification.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    notification.BorderSizePixel = 0
    notification.Parent = notificationContainer
    
    table.insert(notificationQueue, notification)
    
    local notifCorner = Instance.new("UICorner")
    notifCorner.CornerRadius = UDim.new(0, 6)
    notifCorner.Parent = notification
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -10, 0, 20)
    titleLabel.Position = UDim2.new(0, 8, 0, 8)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 12
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = notification
    
    local slideIn = TweenService:Create(notification, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Position = UDim2.new(0, 0, 1, -60 * #notificationQueue)
    })
    slideIn:Play()
    
    spawn(function()
        wait(duration or 3)
        for i, notif in ipairs(notificationQueue) do
            if notif == notification then
                table.remove(notificationQueue, i)
                break
            end
        end
        
        local slideOut = TweenService:Create(notification, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
            Position = UDim2.new(1, 0, notification.Position.Y.Scale, notification.Position.Y.Offset)
        })
        slideOut:Play()
        slideOut.Completed:Connect(function()
            notification:Destroy()
        end)
    end)
end

-- Mobile-Compatible UI Elements

local function createCheckboxToggle(parent, text, position, savedState)
    local container = Instance.new("Frame")
    container.Name = text .. "Container"
    container.Size = UDim2.new(1, -10, 0, 30)
    container.Position = position
    container.BackgroundTransparency = 1
    container.Parent = parent

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, -35, 1, 0)
    textLabel.Position = UDim2.new(0, 10, 0, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = text
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.TextSize = 16
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.TextYAlignment = Enum.TextYAlignment.Center
    textLabel.Parent = container

    local checkbox = Instance.new("TextButton")
    checkbox.Size = UDim2.new(0, 20, 0, 20)
    checkbox.Position = UDim2.new(1, -25, 0.5, -10)
    checkbox.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    checkbox.BorderSizePixel = 1
    checkbox.BorderColor3 = Color3.fromRGB(150, 150, 150)
    checkbox.Text = ""
    checkbox.Parent = container

    local checkmark = Instance.new("TextLabel")
    checkmark.Size = UDim2.new(1, 0, 1, 0)
    checkmark.BackgroundTransparency = 1
    checkmark.Text = "✓"
    checkmark.TextColor3 = Color3.fromRGB(0, 255, 100)
    checkmark.TextSize = 14
    checkmark.Font = Enum.Font.GothamBold
    checkmark.Visible = false
    checkmark.Parent = checkbox

    local isEnabled = savedState or false

    if isEnabled then
        checkbox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        checkbox.BorderColor3 = Color3.fromRGB(0, 255, 100)
        checkmark.Visible = true
        textLabel.TextColor3 = Color3.fromRGB(0, 255, 100)
    end

    checkbox.Activated:Connect(function()
        isEnabled = not isEnabled
        settings[text] = isEnabled

        if isEnabled then
            checkbox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            checkbox.BorderColor3 = Color3.fromRGB(0, 255, 100)
            checkmark.Visible = true
            textLabel.TextColor3 = Color3.fromRGB(0, 255, 100)
            createNotification("Setting Enabled", text .. " enabled", 2)
        else
            checkbox.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
            checkbox.BorderColor3 = Color3.fromRGB(150, 150, 150)
            checkmark.Visible = false
            textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            createNotification("Setting Disabled", text .. " disabled", 2)
        end
    end)

    return container
end

local function createSlider(parent, text, position, minVal, maxVal, savedValue)
    local container = Instance.new("Frame")
    container.Name = text .. "Container"
    container.Size = UDim2.new(1, -10, 0, 40)
    container.Position = position
    container.BackgroundTransparency = 1
    container.Parent = parent

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(0.6, 0, 0, 20)
    textLabel.Position = UDim2.new(0, 10, 0, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = text
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.TextSize = 12
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.Parent = container

    local currentValue = savedValue or 50

    local valueLabel = Instance.new("TextLabel")
    valueLabel.Size = UDim2.new(0.3, 0, 0, 20)
    valueLabel.Position = UDim2.new(0.7, 0, 0, 0)
    valueLabel.BackgroundTransparency = 1
    valueLabel.Text = tostring(currentValue)
    valueLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    valueLabel.TextSize = 12
    valueLabel.Font = Enum.Font.Gotham
    valueLabel.TextXAlignment = Enum.TextXAlignment.Right
    valueLabel.Parent = container

    local sliderBG = Instance.new("TextButton")
    sliderBG.Size = UDim2.new(1, -20, 0, 8)
    sliderBG.Position = UDim2.new(0, 10, 1, -12)
    sliderBG.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    sliderBG.BorderSizePixel = 1
    sliderBG.BorderColor3 = Color3.fromRGB(50, 50, 50)
    sliderBG.Text = ""
    sliderBG.Parent = container

    local sliderFill = Instance.new("Frame")
    local initPos = (currentValue - minVal) / (maxVal - minVal)
    sliderFill.Size = UDim2.new(initPos, 0, 1, 0)
    sliderFill.Position = UDim2.new(0, 0, 0, 0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
    sliderFill.BorderSizePixel = 0
    sliderFill.Parent = sliderBG

    local sliderHandle = Instance.new("TextButton")
    sliderHandle.Size = UDim2.new(0, 12, 0, 12)
    sliderHandle.Position = UDim2.new(initPos, -6, 0.5, -6)
    sliderHandle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    sliderHandle.BorderSizePixel = 1
    sliderHandle.BorderColor3 = Color3.fromRGB(200, 200, 200)
    sliderHandle.Text = ""
    sliderHandle.Parent = sliderBG

    local isDragging = false
    
    local function updateSlider(inputPos)
        local pos = math.clamp((inputPos.X - sliderBG.AbsolutePosition.X) / sliderBG.AbsoluteSize.X, 0, 1)
        local value = math.floor(minVal + (maxVal - minVal) * pos)
        currentValue = value
        settings[text] = value

        sliderFill.Size = UDim2.new(pos, 0, 1, 0)
        sliderHandle.Position = UDim2.new(pos, -6, 0.5, -6)
        valueLabel.Text = tostring(value)
    end

    sliderHandle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or 
           input.UserInputType == Enum.UserInputType.Touch then
            isDragging = true
            updateSlider(input.Position)
        end
    end)

    sliderBG.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or 
           input.UserInputType == Enum.UserInputType.Touch then
            updateSlider(input.Position)
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if isDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or 
                          input.UserInputType == Enum.UserInputType.Touch) then
            updateSlider(input.Position)
        end
    end)

    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or 
           input.UserInputType == Enum.UserInputType.Touch then
            isDragging = false
        end
    end)

    return container
end

-- Tab creation function
local function createTabButton(tabData, index)
    local container = Instance.new("Frame")
    container.Name = tabData.name .. "Container"
    container.Size = UDim2.new(1, 0, 0, 45)
    container.Position = UDim2.new(0, -10, 0, 15 + (index * 45))
    container.BackgroundTransparency = 1
    container.Parent = leftSidebar
    
    local indicator = Instance.new("Frame")
    indicator.Name = "Indicator"
    indicator.Size = UDim2.new(0, 3, 0, 25)
    indicator.Position = UDim2.new(0, 10, 0.5, -12.5)
    indicator.BackgroundColor3 = Color3.fromRGB(220, 50, 47)
    indicator.BorderSizePixel = 0
    indicator.Visible = false
    indicator.Parent = container
    
    local indicatorCorner = Instance.new("UICorner")
    indicatorCorner.CornerRadius = UDim.new(0, 2)
    indicatorCorner.Parent = indicator
    
    local button = Instance.new("TextButton")
    button.Name = tabData.name .. "Tab"
    button.Size = UDim2.new(1, -10, 1, 0)
    button.Position = UDim2.new(0, 10, 0, 0)
    button.BackgroundTransparency = 1
    button.BorderSizePixel = 0
    button.Text = ""
    button.Parent = container
    
    local iconLabel = Instance.new("TextLabel")
    iconLabel.Name = "Icon"
    iconLabel.Size = UDim2.new(0, 16, 0, 16)
    iconLabel.Position = UDim2.new(0, 12, 0.5, -8)
    iconLabel.BackgroundTransparency = 1
    iconLabel.Text = tabData.icon
    iconLabel.TextColor3 = Color3.fromRGB(160, 160, 160)
    iconLabel.TextSize = 14
    iconLabel.Font = Enum.Font.Gotham
    iconLabel.TextXAlignment = Enum.TextXAlignment.Center
    iconLabel.TextYAlignment = Enum.TextYAlignment.Center
    iconLabel.Parent = button
    
    local separator = Instance.new("Frame")
    separator.Name = "Separator"
    separator.Size = UDim2.new(0, 1, 0, 16)
    separator.Position = UDim2.new(0, 34, 0.5, -8)
    separator.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    separator.BorderSizePixel = 0
    separator.Parent = button
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Name = "Text"
    textLabel.Size = UDim2.new(1, -45, 1, 0)
    textLabel.Position = UDim2.new(0, 40, 0, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = tabData.displayName
    textLabel.TextColor3 = Color3.fromRGB(160, 160, 160)
    textLabel.TextSize = 15
    textLabel.Font = Enum.Font.GothamSemibold
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.TextYAlignment = Enum.TextYAlignment.Center
    textLabel.Parent = button
    
    button.Activated:Connect(function()
        currentTab = tabData.name
        leftHeader.Text = tabData.leftTitle
        rightHeader.Text = tabData.rightTitle
        
        for i, tab in ipairs(tabs) do
            local tabContainer = leftSidebar:FindFirstChild(tab.name .. "Container")
            if tabContainer then
                local tabIndicator = tabContainer:FindFirstChild("Indicator")
                local tabButton = tabContainer:FindFirstChild(tab.name .. "Tab")
                local tabIcon = tabButton:FindFirstChild("Icon")
                local tabText = tabButton:FindFirstChild("Text")
                local tabSeparator = tabButton:FindFirstChild("Separator")
                
                if tab.name == tabData.name then
                    tabIndicator.Visible = true
                    tabIcon.TextColor3 = Color3.fromRGB(220, 50, 47)
                    tabText.TextColor3 = Color3.fromRGB(255, 255, 255)
                    tabSeparator.BackgroundColor3 = Color3.fromRGB(220, 50, 47)
                else
                    tabIndicator.Visible = false
                    tabIcon.TextColor3 = Color3.fromRGB(160, 160, 160)
                    tabText.TextColor3 = Color3.fromRGB(160, 160, 160)
                    tabSeparator.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
                end
            end
        end
        updateTabDisplay(tabData.name)
    end)
    
    return container
end

-- Create tabs
for i, tabData in ipairs(tabs) do
    createTabButton(tabData, i-1)
end

-- Set default tab
local defaultContainer = leftSidebar:FindFirstChild("CombatContainer")
if defaultContainer then
    local indicator = defaultContainer:FindFirstChild("Indicator")
    local button = defaultContainer:FindFirstChild("CombatTab")
    local icon = button:FindFirstChild("Icon")
    local text = button:FindFirstChild("Text")
    local separator = button:FindFirstChild("Separator")
    
    indicator.Visible = true
    icon.TextColor3 = Color3.fromRGB(220, 50, 47)
    text.TextColor3 = Color3.fromRGB(255, 255, 255)
    separator.BackgroundColor3 = Color3.fromRGB(220, 50, 47)
end

-- Update tab content
function updateTabDisplay(tabName)
    for _, child in ipairs(leftContent:GetChildren()) do
        if child.Name:find("Container") then
            child:Destroy()
        end
    end
    
    for _, child in ipairs(rightContent:GetChildren()) do
        if child.Name:find("Container") then
            child:Destroy()
        end
    end
    
    if tabName == "Combat" then
        createCheckboxToggle(leftContent, "Enable Aimbot", UDim2.new(0, 0, 0, 10), settings["Enable Aimbot"])
        createSlider(leftContent, "Aim Smoothness", UDim2.new(0, 0, 0, 45), 1, 100, settings["Aim Smoothness"])
        createCheckboxToggle(leftContent, "Silent Aim", UDim2.new(0, 0, 0, 90), settings["Silent Aim"])
        createSlider(leftContent, "FOV Size", UDim2.new(0, 0, 0, 125), 10, 360, settings["FOV Size"])
    end
end

updateTabDisplay("Combat")

-- Minimize/Restore functionality
local isMinimized = false

local function minimizeUI()
    isMinimized = true
    mainFrame.Visible = false
    minimizedIcon.Visible = true
end

local function restoreUI()
    isMinimized = false
    mainFrame.Visible = true
    minimizedIcon.Visible = false
end

minimizeButton.Activated:Connect(function()
    minimizeUI()
end)

minimizedIcon.Activated:Connect(function()
    restoreUI()
end)

-- Dragging functionality (mobile-compatible)
local dragging = false
local dragStart = nil
local startPos = nil

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
       input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or 
                     input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
       input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

-- Minimized icon dragging
local iconDragging = false
local iconDragStart = nil
local iconStartPos = nil

minimizedIcon.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
       input.UserInputType == Enum.UserInputType.Touch then
        iconDragging = true
        iconDragStart = input.Position
        iconStartPos = minimizedIcon.Position
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if iconDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or 
                         input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - iconDragStart
        minimizedIcon.Position = UDim2.new(iconStartPos.X.Scale, iconStartPos.X.Offset + delta.X, iconStartPos.Y.Scale, iconStartPos.Y.Offset + delta.Y)
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
       input.UserInputType == Enum.UserInputType.Touch then
        iconDragging = false
    end
end)

-- Close button
closeButton.Activated:Connect(function()
    screenGui:Destroy()
end)

-- Keyboard shortcut (Right Ctrl to toggle)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.RightControl then
        if isMinimized then
            restoreUI()
        else
            minimizeUI()
        end
    end
end)

-- Animations
local function animateGradient()
    local tweenInfo = TweenInfo.new(3, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1)
    local tween = TweenService:Create(borderGradient, tweenInfo, {Rotation = 405})
    tween:Play()
end

local function animateRGBText()
    local hue = 0
    RunService.Heartbeat:Connect(function()
        hue = (hue + 2) % 360
        local r = math.floor(127.5 * (1 + math.sin(math.rad(hue))))
        local g = math.floor(127.5 * (1 + math.sin(math.rad(hue + 120))))
        local b = math.floor(127.5 * (1 + math.sin(math.rad(hue + 240))))
        radiantLabel.TextColor3 = Color3.fromRGB(r, g, b)
    end)
end

local function updateFPS()
    local lastTime = tick()
    local frameCount = 0
    
    RunService.Heartbeat:Connect(function()
        frameCount = frameCount + 1
        local currentTime = tick()
        if currentTime - lastTime >= 1 then
            local fps = math.floor(frameCount / (currentTime - lastTime))
            fpsLabel.Text = fps .. " FPS"
            frameCount = 0
            lastTime = currentTime
        end
    end)
end

-- Start animations
animateGradient()
animateRGBText()
updateFPS()

-- Startup notification
spawn(function()
    wait(1)
    createNotification("RadiantHub Loaded", "Mobile-compatible UI ready!", 3)
end)

print("RadiantHub Mobile UI Loaded Successfully!")
