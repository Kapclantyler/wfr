-- RadiantHub Example Usage
-- This shows how to use the RadiantHub UI library

-- First, load the library (assuming it's in the same location)
local RadiantHub = loadstring(game:HttpGet("YOUR_RAW_GITHUB_LINK_HERE"))()

-- Create the main window
local Window = RadiantHub:CreateWindow({
    Name = "Example Script Hub",
    Size = UDim2.new(0, 700, 0, 450),
    Theme = "Dark"
})

-- Create the first tab (Main)
local MainTab = Window:CreateTab({
    Name = "Main",
    Icon = "üè†"
})

-- Create sections for the Main tab
local CombatSection = MainTab:AddSection("Combat Features")  -- Will go to LEFT side
local MovementSection = MainTab:AddSection("Movement")       -- Will go to RIGHT side
local VisualsSection = MainTab:AddSection("Visuals")        -- Will go to LEFT side
local SettingsSection = MainTab:AddSection("Settings")      -- Will go to RIGHT side

-- Add elements to Combat Section (LEFT side)
local autoAttackToggle = CombatSection:CreateToggle({
    Name = "Auto Attack",
    Default = false,
    Callback = function(value)
        print("Auto Attack set to:", value)
        if value then
            Window:CreateNotification("Combat", "Auto Attack enabled!", 3)
        else
            Window:CreateNotification("Combat", "Auto Attack disabled!", 3)
        end
    end
})

local attackSpeedSlider = CombatSection:CreateSlider({
    Name = "Attack Speed",
    Min = 1,
    Max = 10,
    Default = 5,
    Callback = function(value)
        print("Attack Speed:", value)
    end
})

local weaponDropdown = CombatSection:CreateDropdown({
    Name = "Weapon Type",
    Options = {"Sword", "Bow", "Staff", "Dagger", "Axe"},
    Default = 1,
    Searchable = true,
    Callback = function(option, index)
        print("Selected weapon:", option, "at index:", index)
        Window:CreateNotification("Combat", "Weapon changed to " .. option, 2)
    end
})

-- Add elements to Movement Section (RIGHT side)
local flyToggle = MovementSection:CreateToggle({
    Name = "Fly Mode",
    Default = false,
    Callback = function(value)
        print("Fly Mode:", value)
    end
})

local speedSlider = MovementSection:CreateSlider({
    Name = "Walk Speed",
    Min = 16,
    Max = 100,
    Default = 16,
    Callback = function(value)
        print("Walk Speed:", value)
    end
})

local jumpPowerSlider = MovementSection:CreateSlider({
    Name = "Jump Power",
    Min = 50,
    Max = 200,
    Default = 50,
    Callback = function(value)
        print("Jump Power:", value)
    end
})

-- Add elements to Visuals Section (LEFT side)
local espToggle = VisualsSection:CreateToggle({
    Name = "Player ESP",
    Default = false,
    Callback = function(value)
        print("Player ESP:", value)
    end
})

local themeColorPicker = VisualsSection:CreateColorPicker({
    Name = "Theme Color",
    Default = Color3.fromRGB(220, 50, 47),
    Callback = function(color)
        print("Theme color changed to:", color)
    end
})

local fullbrightToggle = VisualsSection:CreateToggle({
    Name = "Fullbright",
    Default = false,
    Callback = function(value)
        print("Fullbright:", value)
    end
})

-- Add elements to Settings Section (RIGHT side)
local autoSaveToggle = SettingsSection:CreateToggle({
    Name = "Auto Save Config",
    Default = true,
    Callback = function(value)
        print("Auto Save:", value)
    end
})

local keybindButton = SettingsSection:CreateButton({
    Name = "Set Keybind",
    Callback = function()
        print("Keybind button clicked!")
        Window:CreateNotification("Settings", "Keybind feature coming soon!", 3)
    end
})

local configDropdown = SettingsSection:CreateDropdown({
    Name = "Load Config",
    Options = {"Default", "Combat", "Stealth", "Speed Run"},
    Default = 1,
    Callback = function(option, index)
        print("Loading config:", option)
        Window:CreateNotification("Settings", "Loaded " .. option .. " config", 2)
    end
})

-- Create a second tab (Teleports)
local TeleportTab = Window:CreateTab({
    Name = "Teleports",
    Icon = "üåç"
})

local LocationsSection = TeleportTab:AddSection("Locations")     -- LEFT side
local PlayersSection = TeleportTab:AddSection("Players")        -- RIGHT side

-- Add teleport locations
local locationDropdown = LocationsSection:CreateDropdown({
    Name = "Teleport To",
    Options = {"Spawn", "Shop", "Arena", "Secret Area", "Boss Room"},
    Default = 1,
    Searchable = true,
    Callback = function(option, index)
        print("Teleporting to:", option)
        Window:CreateNotification("Teleport", "Teleported to " .. option, 2)
    end
})

local saveLocationButton = LocationsSection:CreateButton({
    Name = "Save Current Location",
    Callback = function()
        print("Location saved!")
        Window:CreateNotification("Teleport", "Current location saved!", 2)
    end
})

-- Add player teleports
local playerESP = PlayersSection:CreateToggle({
    Name = "Show Players",
    Default = false,
    Callback = function(value)
        print("Show Players:", value)
    end
})

local teleportToPlayerButton = PlayersSection:CreateButton({
    Name = "Teleport to Random Player",
    Callback = function()
        local players = game:GetService("Players"):GetPlayers()
        if #players > 1 then
            local randomPlayer = players[math.random(1, #players)]
            if randomPlayer ~= game:GetService("Players").LocalPlayer then
                print("Teleporting to:", randomPlayer.Name)
                Window:CreateNotification("Teleport", "Teleporting to " .. randomPlayer.Name, 2)
            end
        end
    end
})

-- Create a third tab (Misc)
local MiscTab = Window:CreateTab({
    Name = "Misc",
    Icon = "‚öôÔ∏è"
})

local UtilitySection = MiscTab:AddSection("Utility")         -- LEFT side
local FunSection = MiscTab:AddSection("Fun Features")       -- RIGHT side

-- Utility features
local antiAFKToggle = UtilitySection:CreateToggle({
    Name = "Anti AFK",
    Default = false,
    Callback = function(value)
        print("Anti AFK:", value)
    end
})

local chatSpamToggle = UtilitySection:CreateToggle({
    Name = "Chat Spam",
    Default = false,
    Callback = function(value)
        print("Chat Spam:", value)
    end
})

-- Fun features
local bigHeadToggle = FunSection:CreateToggle({
    Name = "Big Head",
    Default = false,
    Callback = function(value)
        print("Big Head:", value)
    end
})

local rainbowCharacterToggle = FunSection:CreateToggle({
    Name = "Rainbow Character",
    Default = false,
    Callback = function(value)
        print("Rainbow Character:", value)
    end
})

local musicVolumeSlider = FunSection:CreateSlider({
    Name = "Music Volume",
    Min = 0,
    Max = 100,
    Default = 50,
    Callback = function(value)
        print("Music Volume:", value)
    end
})

-- Example of using the API functions
print("=== RadiantHub Example Started ===")

-- Wait a bit then demonstrate some features
wait(2)
Window:CreateNotification("Welcome", "RadiantHub loaded successfully!", 3)

wait(1)

-- Demonstrate setting values programmatically
autoAttackToggle.SetValue(true)
attackSpeedSlider.SetValue(8)
weaponDropdown.SetValue(3) -- Staff

wait(2)
Window:CreateNotification("Demo", "Settings have been automatically configured!", 3)

-- Show debug information
wait(2)
Window:DebugSettings()

print("=== Example Complete ===")
print("Try these features:")
print("- Toggle switches on the left and right")
print("- Adjust sliders") 
print("- Select from dropdowns")
print("- Click buttons")
print("- Switch between tabs")
print("- Use Right Ctrl to minimize/restore")
print("- Drag the window around by the title bar")
